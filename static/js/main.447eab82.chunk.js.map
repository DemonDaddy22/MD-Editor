{"version":3,"sources":["context/InputContext.js","components/Editor.js","components/Output.js","components/Content.js","components/Title.js","App.js","index.js"],"names":["InputContext","React","createContext","markdownText","setMarkdownText","InputContextProvider","props","useState","Provider","value","children","EditorContainer","styled","textarea","Editor","memo","useContext","onChange","e","target","placeholder","OutputContainer","div","renderers","code","language","style","dark","showLineNumbers","wrapLongLines","customStyle","backgroundColor","textShadow","border","codeTagProps","Output","plugins","gfm","inlineLinks","ContentWrapper","Content","AppTitle","Title","AppContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEaA,EAAeC,IAAMC,cAAc,CAC5CC,aAAc,GACdC,gBAAiB,eAYNC,EATc,SAAAC,GAAU,IAAD,EAEMC,mBAAS,IAFf,mBAE3BJ,EAF2B,KAEbC,EAFa,KAIlC,OAAO,cAACJ,EAAaQ,SAAd,CAAuBC,MAAO,CAAEN,eAAcC,mBAA9C,SACFE,EAAMI,YCRTC,EAAkBC,IAAOC,SAAV,ijBAqCNC,EATAb,IAAMc,MAAK,WAAO,IAErBX,EAAoBY,qBAAWhB,GAA/BI,gBAIR,OAAO,cAACO,EAAD,CAAiBM,SAFE,SAAAC,GAAC,OAAId,EAAgBc,EAAEC,OAAOV,QAEHW,YAAY,uB,qEC7B/DC,EAAkBT,IAAOU,IAAV,q/BAwDfC,EAAY,CACdC,KAAM,YAA0B,IAAvBC,EAAsB,EAAtBA,SAAUhB,EAAY,EAAZA,MACf,OAAO,cAAC,IAAD,CAAmBiB,MAAOC,IAAMF,SAAUA,EAAUf,SAAUD,EAAOmB,iBAAe,EAACC,eAAa,EACrGC,YAAa,CAAEC,gBAAiB,UAAWC,WAAY,OAAQC,OAAQ,QAAUC,aAAc,CAAER,MAAO,CAAEM,WAAY,aAanHG,EATAlC,IAAMc,MAAK,WAAO,IAErBZ,EAAiBa,qBAAWhB,GAA5BG,aAER,OAAO,cAACkB,EAAD,UACH,cAAC,IAAD,CAAee,QAAS,CAACC,IAAKC,KAAcf,UAAWA,EAAWb,SAAUP,SCxE9EoC,EAAiB3B,IAAOU,IAAV,+QAqBLkB,EALCvC,IAAMc,MAAK,kBAAM,eAACwB,EAAD,WAC7B,cAAC,EAAD,IACA,cAAC,EAAD,UCpBEE,EAAW7B,IAAOU,IAAV,2XA0BCoB,EAJDzC,IAAMc,MAAK,kBAAM,eAAC0B,EAAD,WAC3B,qCAD2B,MACV,qCADU,mBCpBzBE,EAAe/B,IAAOU,IAAV,wOAkBHsB,EAPH,kBAAM,cAAC,EAAD,UACjB,eAACD,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,UCdFE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.447eab82.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const InputContext = React.createContext({\n    markdownText: '',\n    setMarkdownText: () => { }\n});\n\nconst InputContextProvider = props => {\n\n    const [markdownText, setMarkdownText] = useState('');\n\n    return <InputContext.Provider value={{ markdownText, setMarkdownText }}>\n        {props.children}\n    </InputContext.Provider>;\n};\n\nexport default InputContextProvider;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { InputContext } from '../context/InputContext';\n\nconst EditorContainer = styled.textarea`\n    background-color: transparent;\n    border: 1px solid #E9AB51;\n    border-radius: 4px;\n    box-shadow: 0 5px 10px #E9AB5127;\n    color: #E9AB51;\n    flex: 1;\n    height: 400px;\n    min-width: 450px;\n    outline: none;\n    padding: 0.75rem;\n    resize: none;\n\n    ::placeholder {\n        color: #E9AB517f;\n    }\n\n    @media (min-width: 768px) {\n        font-size: 1.25rem;\n        padding: 1rem;\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 1.5rem;\n        height: calc(100vh - 236px);\n    }\n`;\n\nconst Editor = React.memo(() => {\n\n    const { setMarkdownText } = useContext(InputContext);\n\n    const handleInputChange = e => setMarkdownText(e.target.value);\n\n    return <EditorContainer onChange={handleInputChange} placeholder='Start typing...'></EditorContainer>;\n});\n\nexport default Editor;","import React, { useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styled from 'styled-components';\nimport { InputContext } from '../context/InputContext';\nimport gfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport inlineLinks from 'remark-inline-links';\n\nconst OutputContainer = styled.div`\n    background-color: transparent;\n    border: 1px solid #E9AB51;\n    border-radius: 4px;\n    box-shadow: 0 5px 10px #E9AB5127;\n    color: #E9AB51;\n    flex: 1;\n    height: 400px;\n    min-width: 450px;\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding: 0.25rem 0.75rem;\n    word-wrap: normal;\n    white-space: pre-wrap;\n\n    hr {\n        border-color: #E9AB51;\n    }\n\n    a {\n        color: #FFF;\n        text-decoration: none;\n\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n\n    table {\n        border: 1px solid #E9AB51;\n        border-collapse: collapse;\n    }\n\n    td, th {\n        border: 1px solid #E9AB51;\n        padding: 0.5rem 1rem;\n    }\n\n    td {\n        color: #FFF;\n    }\n\n    img {\n        width: 100%;\n        height: auto;\n    }\n    \n    @media (min-width: 768px) {\n        padding: 0.5rem 1rem;\n    }\n\n    @media (min-width: 1024px) {\n        height: calc(100vh - 236px);\n    }\n`;\n\nconst renderers = {\n    code: ({ language, value }) => {\n        return <SyntaxHighlighter style={dark} language={language} children={value} showLineNumbers wrapLongLines\n            customStyle={{ backgroundColor: '#2e4d5e', textShadow: 'none', border: 'none' }} codeTagProps={{ style: { textShadow: 'none' } }} />;\n    }\n};\n\nconst Output = React.memo(() => {\n\n    const { markdownText } = useContext(InputContext);\n\n    return <OutputContainer>\n        <ReactMarkdown plugins={[gfm, inlineLinks]} renderers={renderers} children={markdownText} />\n    </OutputContainer>;\n});\n\nexport default Output;","import React from 'react';\nimport styled from 'styled-components';\nimport Editor from './Editor';\nimport Output from './Output';\n\nconst ContentWrapper = styled.div`\n    display: flex;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 1rem;\n    margin: 0 1rem 1rem;\n\n    @media (min-width: 768px) {\n        margin: 0 2rem 1rem;\n    }\n\n    @media (min-width: 1024px) {\n        margin: 0 4rem 2rem;\n    }\n`;\n\nconst Content = React.memo(() => <ContentWrapper>\n    <Editor />\n    <Output />\n</ContentWrapper>);\n\nexport default Content;","import React from 'react';\nimport styled from 'styled-components';\n\nconst AppTitle = styled.div`\n    color: #FFFFFF;\n    font-size: 2rem;\n    font-weight: bold;\n    letter-spacing: -0.5px;\n    padding: 2rem 0;\n    text-align: center;\n\n    span {\n        color: #E9AB51\n    }\n\n    @media (min-width: 768px) {\n        font-size: 3rem;\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 4rem;\n        padding: 4rem 0;\n    }\n`;\n\nconst Title = React.memo(() => <AppTitle>\n    <span>M</span>ark<span>D</span>own Editor\n</AppTitle>);\n\nexport default Title;","import styled from 'styled-components';\nimport Content from './components/Content';\nimport Title from './components/Title';\nimport InputContextProvider from './context/InputContext';\n\nconst AppContainer = styled.div`\n\tbackground-color: #1f3440;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: 'Roboto Mono', monospace;\n\theight: inherit;\n\toverflow-x: inherit;\n\toverflow-y: inherit;\n\twidth: inherit;\n`;\n\nconst App = () => <InputContextProvider>\n\t<AppContainer>\n\t\t<Title />\n\t\t<Content />\n\t</AppContainer>\n</InputContextProvider>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}